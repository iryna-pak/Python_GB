"""
Поработайте с переменными, создайте несколько, выведите на экран.
Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.
"""

name = input("Введите свое имя: ")
print("Привет, %s!" % name)

age = int(input("Сколько вам лет?"))
print("Ого! Тебе уже %d лет" % age)

"""
Пользователь вводит время в секундах.
Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
Используйте форматирование строк.
"""

seconds_input = int(input("Введите количество секунд: "))

hours = seconds_input // 3600  # узнаем сколько целых часов в введенных секундах
minutes = seconds_input % 3600 // 60  # сначала находим остаток секунд, затем оставшиеся секунды переводим в минуты
seconds = seconds_input % 3600 % 60  # находим остаток секунд
print(f"{hours:02d}:{minutes:02d}:{seconds:02d}")

"""
Узнайте у пользователя число n.
Найдите сумму чисел n + nn + nnn.
Например, пользователь ввёл число 3.
Считаем 3 + 33 + 333 = 369.
"""

# Просим пользователя ввести число с клавиатуры
n = input("Введите число: ")
# Получение nn и nnn с помощью конкатенации строк
nn = n + n  # n*2
nnn = n + n + n  # n*3
# До этого мы работали со строками.
# Для сложения, нужно сконвертировать в int
result = int(n) + int(nn) + int(nnn)
print(result)

"""
Пользователь вводит целое положительное число.
Найдите самую большую цифру в числе.
Для решения используйте цикл while и арифметические операции.
"""


input_number = input("Введите целое положительное число: ")

# number_length = len(input_number)
# max_element = 0
# i = 0
# while i < number_length:
#     current_element = int(input_number[i])
#     if current_element > max_element:
#         max_element = current_element
#     i += 1
# print(max_element)

"235679"

# input_number = int(input_number)
# max_element = 0
# while input_number != 0:
#     last_element = input_number % 10
#     input_number = input_number//10
#     if last_element > max_element:
#         max_element = last_element
# print(max_element)


# input_numbers = list(input_number)
# print(max(input_numbers))


# max_element = 0
# for element in input_number:
#     if int(element) > max_element:
#         max_element = int(element)
#
# print(max_element)

"""
Запросите у пользователя значения выручки и издержек фирмы.
Определите, с каким финансовым результатом работает фирма.
Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки.
Выведите соответствующее сообщение.

Если фирма отработала с прибылью, вычислите рентабельность выручки.
Это отношение прибыли к выручке.
Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.
"""

revenue = float(input("Выручка фирмы: "))
costs = float(input("Издержжки фирмы: "))

profit = revenue-costs

if profit > 0:
    print(f"Рентабильность капитала равна  {profit/revenue * 100:.2f}%")
    workers_count = int(input("Введите количество сотрудников: "))
    print(f"Прибыль на одного сотрудника: {profit/workers_count}")
elif profit < 0:
    print("Фирма работает в убыток")
else:
    print("У фирмы нулевая прибыль")

"""
Спортсмен занимается ежедневными пробежками.
В первый день его результат составил a километров.
Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
Требуется определить номер дня, на который результат спортсмена составит не менее b километров.
Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.

Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22
"""

a = int(input("Результат спортсмена в первый день: "))
b = int(input("Желаемая дистанция: "))
days = 1
while a < b:
    a *= 1.1
    days += 1

print(f"Спортсмен достигнет дистанции в {b} км за {days} дней")